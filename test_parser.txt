// TODO:
// struct declaration
// struct fields

fn main() {
    let a = 3 + 4
    let b: int // [error: "initial value required"]
    var b: int
    let c &int // [error: "expected.*':'.*got '&'"]
    var c: int blah // [error: "expected.*'\\n'.*blah"]
    // let d: & // [error: "expected type expression"]
    // let d: &mut // [error: "expected type name"]
    // let d: &mut Car
    // let d: &mut Car Sedan // [error: "expected end of decl.*Sedan"]

    1 * 2 + 3 + 4 * 5
    3 + (a - (b + a * 3)) * 2

    // b a // [error: "expected.*="]
    // b = a
    // c = &b

    // f(3, 4)
    // f(3, 4,)
    // f(3, 4, ,) // [error: "expected.*expression"]
    // f(3, 4, 2 + 5)
}

// fn f(a: int) int { // [error: "expected.*'->'.*got 'int'"]
// }
// 
// fn f(a: int, b int, c: int) -> int { // [error: "expected.*':'"]
//     return * // [error: "expected.*expression"]
// }

// struct Car // [error: "expected.*\{"]
//     a: i64,
//     b: int
//     c: int, // comma is permitted
// // [error: "unterminated struct"]
